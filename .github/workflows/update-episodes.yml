name: Update Podcast Episodes

on:
  schedule:
    # Run daily at 12:00 PM UTC (adjust timezone as needed)
    - cron: '0 12 * * *'
  workflow_dispatch:
    inputs:
      podcast_filter:
        description: 'Which podcasts to update (comma-separated, or "all" for all)'
        required: false
        default: 'auto'
        type: string

jobs:
  update-episodes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history to ensure we can detect changes
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create data directory
      run: mkdir -p data

    - name: Update podcast episodes
      run: |
        if [ "${{ github.event.inputs.podcast_filter }}" != "" ]; then
          PODCAST_FILTER="${{ github.event.inputs.podcast_filter }}" npm run update-episodes
        else
          npm run update-episodes
        fi
      env:
        PODCAST_FILTER: ${{ github.event.inputs.podcast_filter || 'auto' }}

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -f data/episodes.json ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Files changed:"
          git status --porcelain
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No episodes.json file created"
        fi

    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/episodes.json
        git commit -m "üîÑ Auto-update podcast episodes

        Updated at: $(date -u '+%Y-%m-%d %H:%M UTC')
        Trigger: ${{ github.event_name }}
        Filter: ${{ env.PODCAST_FILTER || 'auto' }}" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Trigger Netlify build
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        if [ -n "${{ secrets.NETLIFY_BUILD_HOOK }}" ]; then
          curl -X POST -d {} "${{ secrets.NETLIFY_BUILD_HOOK }}"
          echo "‚úÖ Netlify build triggered"
        else
          echo "‚ö†Ô∏è NETLIFY_BUILD_HOOK secret not configured"
        fi
