name: Daily Episode Update

on:
  # Run daily at 2 AM UTC (you can adjust the time)
  schedule:
    - cron: '0 2 * * *'

  # Allow manual triggering
  workflow_dispatch:

  # Run on push to main branch (optional, for testing)
  push:
    branches: [ main, master ]
    paths:
      - 'episode_update.py'
      - 'episode_detector_config.json'

jobs:
  update-episodes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history for proper backup functionality
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run episode update
      env:
        PYTHONPATH: ${{ github.workspace }}
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      run: |
        echo "üéôÔ∏è Starting automated episode detection..."
        python episode_update.py --verbose

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "üìù Changes detected - new episodes found!"
          git status --porcelain
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "üìã No changes - no new episodes found"
        fi

    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/*.json
        git add backups/*.json
        git commit -m "ü§ñ Auto-update: New podcast episodes detected

        Episodes updated by automated detection system.
        Changes made on $(date -u +'%Y-%m-%d %H:%M UTC')

        This commit was automatically generated by the episode detection workflow."

        # Push changes back to repository
        git push

    - name: Create summary comment
      if: always()
      run: |
        if [ "${{ steps.verify-changed-files.outputs.changes }}" = "true" ]; then
          echo "## ‚úÖ Episode Update Complete" >> summary.md
          echo "" >> summary.md
          echo "ü§ñ **Automated episode detection found new content!**" >> summary.md
          echo "" >> summary.md
          echo "**Changes made:**" >> summary.md
          git show --name-only HEAD | grep -E "\.json$" | sed 's/^/* /g' >> summary.md
          echo "" >> summary.md
          echo "**Next check:** Tomorrow at 2:00 AM UTC" >> summary.md
        else
          echo "## üìã Episode Check Complete" >> summary.md
          echo "" >> summary.md
          echo "ü§ñ **Automated episode detection ran successfully**" >> summary.md
          echo "" >> summary.md
          echo "No new episodes were found this time." >> summary.md
          echo "" >> summary.md
          echo "**Next check:** Tomorrow at 2:00 AM UTC" >> summary.md
        fi

        echo "" >> summary.md
        echo "---" >> summary.md
        echo "*This message was automatically generated by the episode detection workflow*" >> summary.md

    - name: Upload summary as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: episode-update-summary
        path: summary.md
        retention-days: 7

    - name: Notification on failure
      if: failure()
      run: |
        echo "‚ùå Episode update workflow failed!"
        echo "Check the logs for details."
        # You could add Slack/email notifications here if desired
